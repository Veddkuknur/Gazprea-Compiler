typedef integer int;
typedef tuple(int, real, character) intT;


function f(integer x, integer  z) returns integer = x * -z;


procedure main() returns int {

    integer v = f(f(f(f(f(13,1+1),1+1),1+1),1+1),1+1);
    intT t = (1000, 4.1, 'c');
    int t1 = 0;
    real t2 = 0.0;
    character t3 = '0';

    int x =0;
    real y = 0.0;
    character z = '0';

    intT tt = (1000, 4.1, 'c');
    intT ttt = (1000, 1.2, 'c');
    tt == ttt->std_output;
    tt != ttt->std_output;
    tt == tt ->std_output;
        tt != tt ->std_output;

        t.1 -> std_output;
        '\n' -> std_output;
        t.2 -> std_output;
        '\n' -> std_output;
        t.3 -> std_output;
        '\n' -> std_output;

        t1, t2, t3 = t;
        t1 -> std_output;
        '\n' -> std_output;
        t2 -> std_output;
        '\n' -> std_output;
        t3 -> std_output;
        '\n' -> std_output;

        x, y, z = (1,1.1, '1');
        x -> std_output;
        '\n' -> std_output;
        y -> std_output;
        '\n' -> std_output;
        z -> std_output;
        '\n' -> std_output;

     v ->std_output; '\n' ->std_output;
     /* Can use this in main, even though the definition is below */
     return 0;

     y = 1;

    return 0;
}




//CHECK_FILE:test2.out